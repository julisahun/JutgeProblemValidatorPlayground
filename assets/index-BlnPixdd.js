import{g as getDefaultExportFromCjs}from"./_commonjsHelpers-C932wzq6.js";import{r as require$$0}from"./___vite-browser-external_commonjs-proxy-DhbCIgaM.js";function _mergeNamespaces(e,t){for(var r=0;r<t.length;r++){const s=t[r];if(typeof s!="string"&&!Array.isArray(s)){for(const a in s)if(a!=="default"&&!(a in e)){const u=Object.getOwnPropertyDescriptor(s,a);u&&Object.defineProperty(e,a,u.get?u:{enumerable:!0,get:()=>s[a]})}}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}))}var treeSitter={exports:{}};let binding;try{binding=require("./build/Release/tree_sitter_runtime_binding")}catch(e){try{binding=require("./build/Debug/tree_sitter_runtime_binding")}catch{throw e}}const util=require$$0,{Query,Parser,NodeMethods,Tree,TreeCursor}=binding,{rootNode,edit}=Tree.prototype;Object.defineProperty(Tree.prototype,"rootNode",{get(){if(this instanceof Tree&&rootNode)return unmarshalNode(rootNode.call(this),this)},configurable:!0});Tree.prototype.edit=function(e){this instanceof Tree&&edit&&edit.call(this,e.startPosition.row,e.startPosition.column,e.oldEndPosition.row,e.oldEndPosition.column,e.newEndPosition.row,e.newEndPosition.column,e.startIndex,e.oldEndIndex,e.newEndIndex)};Tree.prototype.walk=function(){return this.rootNode.walk()};class SyntaxNode{constructor(t){this.tree=t}[util.inspect.custom](){return this.constructor.name+` {
  type: `+this.type+`,
  startPosition: `+pointToString(this.startPosition)+`,
  endPosition: `+pointToString(this.endPosition)+`,
  childCount: `+this.childCount+`,
}`}get type(){return marshalNode(this),NodeMethods.type(this.tree)}get typeId(){return marshalNode(this),NodeMethods.typeId(this.tree)}get isNamed(){return marshalNode(this),NodeMethods.isNamed(this.tree)}get text(){return this.tree.getText(this)}get startPosition(){return marshalNode(this),NodeMethods.startPosition(this.tree),unmarshalPoint()}get endPosition(){return marshalNode(this),NodeMethods.endPosition(this.tree),unmarshalPoint()}get startIndex(){return marshalNode(this),NodeMethods.startIndex(this.tree)}get endIndex(){return marshalNode(this),NodeMethods.endIndex(this.tree)}get parent(){return marshalNode(this),unmarshalNode(NodeMethods.parent(this.tree),this.tree)}get children(){return marshalNode(this),unmarshalNodes(NodeMethods.children(this.tree),this.tree)}get namedChildren(){return marshalNode(this),unmarshalNodes(NodeMethods.namedChildren(this.tree),this.tree)}get childCount(){return marshalNode(this),NodeMethods.childCount(this.tree)}get namedChildCount(){return marshalNode(this),NodeMethods.namedChildCount(this.tree)}get firstChild(){return marshalNode(this),unmarshalNode(NodeMethods.firstChild(this.tree),this.tree)}get firstNamedChild(){return marshalNode(this),unmarshalNode(NodeMethods.firstNamedChild(this.tree),this.tree)}get lastChild(){return marshalNode(this),unmarshalNode(NodeMethods.lastChild(this.tree),this.tree)}get lastNamedChild(){return marshalNode(this),unmarshalNode(NodeMethods.lastNamedChild(this.tree),this.tree)}get nextSibling(){return marshalNode(this),unmarshalNode(NodeMethods.nextSibling(this.tree),this.tree)}get nextNamedSibling(){return marshalNode(this),unmarshalNode(NodeMethods.nextNamedSibling(this.tree),this.tree)}get previousSibling(){return marshalNode(this),unmarshalNode(NodeMethods.previousSibling(this.tree),this.tree)}get previousNamedSibling(){return marshalNode(this),unmarshalNode(NodeMethods.previousNamedSibling(this.tree),this.tree)}hasChanges(){return marshalNode(this),NodeMethods.hasChanges(this.tree)}hasError(){return marshalNode(this),NodeMethods.hasError(this.tree)}isMissing(){return marshalNode(this),NodeMethods.isMissing(this.tree)}toString(){return marshalNode(this),NodeMethods.toString(this.tree)}child(t){return marshalNode(this),unmarshalNode(NodeMethods.child(this.tree,t),this.tree)}namedChild(t){return marshalNode(this),unmarshalNode(NodeMethods.namedChild(this.tree,t),this.tree)}firstChildForIndex(t){return marshalNode(this),unmarshalNode(NodeMethods.firstChildForIndex(this.tree,t),this.tree)}firstNamedChildForIndex(t){return marshalNode(this),unmarshalNode(NodeMethods.firstNamedChildForIndex(this.tree,t),this.tree)}namedDescendantForIndex(t,r){return marshalNode(this),r==null&&(r=t),unmarshalNode(NodeMethods.namedDescendantForIndex(this.tree,t,r),this.tree)}descendantForIndex(t,r){return marshalNode(this),r==null&&(r=t),unmarshalNode(NodeMethods.descendantForIndex(this.tree,t,r),this.tree)}descendantsOfType(t,r,s){return marshalNode(this),typeof t=="string"&&(t=[t]),unmarshalNodes(NodeMethods.descendantsOfType(this.tree,t,r,s),this.tree)}namedDescendantForPosition(t,r){return marshalNode(this),r==null&&(r=t),unmarshalNode(NodeMethods.namedDescendantForPosition(this.tree,t,r),this.tree)}descendantForPosition(t,r){return marshalNode(this),r==null&&(r=t),unmarshalNode(NodeMethods.descendantForPosition(this.tree,t,r),this.tree)}closest(t){return marshalNode(this),typeof t=="string"&&(t=[t]),unmarshalNode(NodeMethods.closest(this.tree,t),this.tree)}walk(){marshalNode(this);const t=NodeMethods.walk(this.tree);return t.tree=this.tree,t}}const{parse,setLanguage}=Parser.prototype,languageSymbol=Symbol("parser.language");Parser.prototype.setLanguage=function(e){return this instanceof Parser&&setLanguage&&setLanguage.call(this,e),this[languageSymbol]=e,e.nodeSubclasses||initializeLanguageNodeClasses(e),this};Parser.prototype.getLanguage=function(e){return this[languageSymbol]||null};Parser.prototype.parse=function(e,t,{bufferSize:r,includedRanges:s}={}){let a,u=e;if(typeof e=="string"){const d=e;e=(c,i)=>d.slice(c),a=getTextFromString}else a=getTextFromFunction;const l=this instanceof Parser&&parse?parse.call(this,e,t,r,s):void 0;return l&&(l.input=u,l.getText=a,l.language=this.getLanguage()),l};const{startPosition,endPosition,currentNode,reset}=TreeCursor.prototype;Object.defineProperties(TreeCursor.prototype,{currentNode:{get(){if(this instanceof TreeCursor&&currentNode)return unmarshalNode(currentNode.call(this),this.tree)},configurable:!0},startPosition:{get(){if(this instanceof TreeCursor&&startPosition)return startPosition.call(this),unmarshalPoint()},configurable:!0},endPosition:{get(){if(this instanceof TreeCursor&&endPosition)return endPosition.call(this),unmarshalPoint()},configurable:!0},nodeText:{get(){return this.tree.getText(this)},configurable:!0}});TreeCursor.prototype.reset=function(e){marshalNode(e),this instanceof TreeCursor&&reset&&reset.call(this)};const{_matches,_captures}=Query.prototype,PREDICATE_STEP_TYPE={DONE:0,CAPTURE:1,STRING:2},ZERO_POINT={row:0,column:0};Query.prototype._init=function(){const e=this._getPredicates(),t=e.length,r=new Array(t),s=new Array(t),a=new Array(t),u=new Array(t),l=0,d=2,c=4;for(let i=0;i<e.length;i++){u[i]=[];for(let N=0;N<e[i].length;N++){const o=e[i][N],h=o.length/2;if(o[l]!==PREDICATE_STEP_TYPE.STRING)throw new Error("Predicates must begin with a literal value");const m=o[l+1];let f=!0;switch(m){case"not-eq?":f=!1;case"eq?":if(h!==3)throw new Error(`Wrong number of arguments to \`#eq?\` predicate. Expected 2, got ${h-1}`);if(o[d]!==PREDICATE_STEP_TYPE.CAPTURE)throw new Error(`First argument of \`#eq?\` predicate must be a capture. Got "${o[d+1]}"`);if(o[c]===PREDICATE_STEP_TYPE.CAPTURE){const g=o[d+1],p=o[c+1];u[i].push(function(x){let y,I;for(const T of x)T.name===g&&(y=T.node),T.name===p&&(I=T.node);return y===void 0||I===void 0?!0:y.text===I.text===f})}else{const g=o[d+1],p=o[c+1];u[i].push(function(x){for(const y of x)if(y.name===g)return y.node.text===p===f;return!0})}break;case"match?":if(h!==3)throw new Error(`Wrong number of arguments to \`#match?\` predicate. Expected 2, got ${h-1}.`);if(o[d]!==PREDICATE_STEP_TYPE.CAPTURE)throw new Error(`First argument of \`#match?\` predicate must be a capture. Got "${o[d+1]}".`);if(o[c]!==PREDICATE_STEP_TYPE.STRING)throw new Error(`Second argument of \`#match?\` predicate must be a string. Got @${o[c+1]}.`);const P=o[d+1],S=new RegExp(o[c+1]);u[i].push(function(g){for(const p of g)if(p.name===P)return S.test(p.node.text);return!0});break;case"set!":if(h<2||h>3)throw new Error(`Wrong number of arguments to \`#set!\` predicate. Expected 1 or 2. Got ${h-1}.`);if(o.some((g,p)=>p%2!==1&&g!==PREDICATE_STEP_TYPE.STRING))throw new Error('Arguments to `#set!` predicate must be a strings.".');r[i]||(r[i]={}),r[i][o[d+1]]=o[c]?o[c+1]:null;break;case"is?":case"is-not?":if(h<2||h>3)throw new Error(`Wrong number of arguments to \`#${m}\` predicate. Expected 1 or 2. Got ${h-1}.`);if(o.some((g,p)=>p%2!==1&&g!==PREDICATE_STEP_TYPE.STRING))throw new Error(`Arguments to \`#${m}\` predicate must be a strings.".`);const E=m==="is?"?s:a;E[i]||(E[i]={}),E[i][o[d+1]]=o[c]?o[c+1]:null;break;default:throw new Error(`Unknown query predicate \`#${o[l+1]}\``)}}}this.predicates=Object.freeze(u),this.setProperties=Object.freeze(r),this.assertedProperties=Object.freeze(s),this.refutedProperties=Object.freeze(a)};Query.prototype.matches=function(e,t=ZERO_POINT,r=ZERO_POINT){marshalNode(e);const[s,a]=_matches.call(this,e.tree,t.row,t.column,r.row,r.column),u=unmarshalNodes(a,e.tree),l=[];let d=0,c=0;for(;d<s.length;){const i=s[d++],N=[];for(;d<s.length&&typeof s[d]=="string";){const o=s[d++];N.push({name:o,node:u[c++]})}if(this.predicates[i].every(o=>o(N))){const o={pattern:i,captures:N},h=this.setProperties[i],m=this.assertedProperties[i],f=this.refutedProperties[i];h&&(o.setProperties=h),m&&(o.assertedProperties=m),f&&(o.refutedProperties=f),l.push(o)}}return l};Query.prototype.captures=function(e,t=ZERO_POINT,r=ZERO_POINT){marshalNode(e);const[s,a]=_captures.call(this,e.tree,t.row,t.column,r.row,r.column),u=unmarshalNodes(a,e.tree),l=[];let d=0,c=0;for(;d<s.length;){const i=s[d++],N=s[d++],o=[];for(;d<s.length&&typeof s[d]=="string";){const h=s[d++];o.push({name:h,node:u[c++]})}if(this.predicates[i].every(h=>h(o))){const h=o[N],m=this.setProperties[i],f=this.assertedProperties[i],P=this.refutedProperties[i];m&&(h.setProperties=m),f&&(h.assertedProperties=f),P&&(h.refutedProperties=P),l.push(h)}}return l};function getTextFromString(e){return this.input.substring(e.startIndex,e.endIndex)}function getTextFromFunction({startIndex:e,endIndex:t}){const{input:r}=this;let s="";const a=t-e;for(;s.length<a;){const u=r(e+s.length);s+=u}return s.substr(0,a)}const{pointTransferArray}=binding,NODE_FIELD_COUNT=6,ERROR_TYPE_ID=65535;function getID(e,t){const r=BigInt(e[t]);return(BigInt(e[t+1])<<32n)+r}function unmarshalNode(e,t,r=0,s=null){if(typeof e=="object")return e;const a=e,u=a===ERROR_TYPE_ID?SyntaxNode:t.language.nodeSubclasses[a],{nodeTransferArray:l}=binding,d=getID(l,r);if(d===0n)return null;let c;if(s&&(c=s.get(d)))return c;const i=new u(t);for(let N=0;N<NODE_FIELD_COUNT;N++)i[N]=l[r+N];return s?s.set(d,i):t._cacheNode(i),i}function unmarshalNodes(e,t){const r=new Map;let s=0;for(let a=0,{length:u}=e;a<u;a++){const l=unmarshalNode(e[a],t,s,r);l!==e[a]&&(e[a]=l,s+=NODE_FIELD_COUNT)}return t._cacheNodes(Array.from(r.values())),e}function marshalNode(e){if(!(e.tree instanceof Tree))throw new TypeError("SyntaxNode must belong to a Tree");const{nodeTransferArray:t}=binding;for(let r=0;r<NODE_FIELD_COUNT;r++)t[r]=e[r]}function unmarshalPoint(){return{row:pointTransferArray[0],column:pointTransferArray[1]}}function pointToString(e){return`{row: ${e.row}, column: ${e.column}}`}function initializeLanguageNodeClasses(language){const nodeTypeNamesById=binding.getNodeTypeNamesById(language),nodeFieldNamesById=binding.getNodeFieldNamesById(language),nodeTypeInfo=language.nodeTypeInfo||[],nodeSubclasses=[];for(let id=0,n=nodeTypeNamesById.length;id<n;id++){nodeSubclasses[id]=SyntaxNode;const typeName=nodeTypeNamesById[id];if(!typeName)continue;const typeInfo=nodeTypeInfo.find(e=>e.named&&e.type===typeName);if(!typeInfo)continue;const fieldNames=[];let classBody=`
`;if(typeInfo.fields)for(const e in typeInfo.fields){const t=nodeFieldNamesById.indexOf(e);if(t!==-1)if(typeInfo.fields[e].multiple){const r=camelCase(e)+"Nodes";fieldNames.push(r),classBody+=`
            get ${r}() {
              marshalNode(this);
              return unmarshalNodes(NodeMethods.childNodesForFieldId(this.tree, ${t}), this.tree);
            }
          `.replace(/\s+/g," ")+`
`}else{const r=camelCase(e,!1)+"Node";fieldNames.push(r),classBody+=`
            get ${r}() {
              marshalNode(this);
              return unmarshalNode(NodeMethods.childNodeForFieldId(this.tree, ${t}), this.tree);
            }
          `.replace(/\s+/g," ")+`
`}}const className=camelCase(typeName,!0)+"Node",nodeSubclass=eval(`class ${className} extends SyntaxNode {${classBody}}; ${className}`);nodeSubclass.prototype.type=typeName,nodeSubclass.prototype.fields=Object.freeze(fieldNames.sort()),nodeSubclasses[id]=nodeSubclass}language.nodeSubclasses=nodeSubclasses}function camelCase(e,t){return e=e.replace(/_(\w)/g,(r,s)=>s.toUpperCase()),t&&(e=e[0].toUpperCase()+e.slice(1)),e}treeSitter.exports=Parser;var Query_1=treeSitter.exports.Query=Query,Tree_1=treeSitter.exports.Tree=Tree,SyntaxNode_1=treeSitter.exports.SyntaxNode=SyntaxNode,TreeCursor_1=treeSitter.exports.TreeCursor=TreeCursor,treeSitterExports=treeSitter.exports;const index=getDefaultExportFromCjs(treeSitterExports),index$1=_mergeNamespaces({__proto__:null,Query:Query_1,SyntaxNode:SyntaxNode_1,Tree:Tree_1,TreeCursor:TreeCursor_1,default:index},[treeSitterExports]);export{index$1 as i};
